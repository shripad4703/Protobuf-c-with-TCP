/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cmessage.proto */

#ifndef PROTOBUF_C_cmessage_2eproto__INCLUDED
#define PROTOBUF_C_cmessage_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Submessage Submessage;
typedef struct _EMessage EMessage;


/* --- enums --- */


/* --- messages --- */

struct  _Submessage
{
  ProtobufCMessage base;
  int32_t value;
};
#define SUBMESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&submessage__descriptor) \
    , 0 }


struct  _EMessage
{
  ProtobufCMessage base;
  size_t n_a;
  Submessage **a;
};
#define EMESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&emessage__descriptor) \
    , 0,NULL }


/* Submessage methods */
void   submessage__init
                     (Submessage         *message);
size_t submessage__get_packed_size
                     (const Submessage   *message);
size_t submessage__pack
                     (const Submessage   *message,
                      uint8_t             *out);
size_t submessage__pack_to_buffer
                     (const Submessage   *message,
                      ProtobufCBuffer     *buffer);
Submessage *
       submessage__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   submessage__free_unpacked
                     (Submessage *message,
                      ProtobufCAllocator *allocator);
/* EMessage methods */
void   emessage__init
                     (EMessage         *message);
size_t emessage__get_packed_size
                     (const EMessage   *message);
size_t emessage__pack
                     (const EMessage   *message,
                      uint8_t             *out);
size_t emessage__pack_to_buffer
                     (const EMessage   *message,
                      ProtobufCBuffer     *buffer);
EMessage *
       emessage__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   emessage__free_unpacked
                     (EMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Submessage_Closure)
                 (const Submessage *message,
                  void *closure_data);
typedef void (*EMessage_Closure)
                 (const EMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor submessage__descriptor;
extern const ProtobufCMessageDescriptor emessage__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cmessage_2eproto__INCLUDED */
